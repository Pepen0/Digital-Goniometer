@startuml

/' diagram meta data start
config=StructureConfiguration;
{
  "projectClassification": {
    "searchMode": "OpenProject", // OpenProject, AllProjects
    "includedProjects": "",
    "pathEndKeywords": "*.impl",
    "isClientPath": "",
    "isClientName": "",
    "isTestPath": "",
    "isTestName": "",
    "isMappingPath": "",
    "isMappingName": "",
    "isDataAccessPath": "",
    "isDataAccessName": "",
    "isDataStructurePath": "",
    "isDataStructureName": "",
    "isInterfaceStructuresPath": "",
    "isInterfaceStructuresName": "",
    "isEntryPointPath": "",
    "isEntryPointName": "",
    "treatFinalFieldsAsMandatory": false
  },
  "graphRestriction": {
    "classPackageExcludeFilter": "",
    "classPackageIncludeFilter": "",
    "classNameExcludeFilter": "",
    "classNameIncludeFilter": "",
    "methodNameExcludeFilter": "",
    "methodNameIncludeFilter": "",
    "removeByInheritance": "", // inheritance/annotation based filtering is done in a second step
    "removeByAnnotation": "",
    "removeByClassPackage": "", // cleanup the graph after inheritance/annotation based filtering is done
    "removeByClassName": "",
    "cutMappings": false,
    "cutEnum": true,
    "cutTests": true,
    "cutClient": true,
    "cutDataAccess": false,
    "cutInterfaceStructures": false,
    "cutDataStructures": false,
    "cutGetterAndSetter": true,
    "cutConstructors": true
  },
  "graphTraversal": {
    "forwardDepth": 6,
    "backwardDepth": 6,
    "classPackageExcludeFilter": "",
    "classPackageIncludeFilter": "",
    "classNameExcludeFilter": "",
    "classNameIncludeFilter": "",
    "methodNameExcludeFilter": "",
    "methodNameIncludeFilter": "",
    "hideMappings": false,
    "hideDataStructures": false,
    "hidePrivateMethods": true,
    "hideInterfaceCalls": true, // indirection: implementation -> interface (is hidden) -> implementation
    "onlyShowApplicationEntryPoints": false, // root node is included
    "useMethodCallsForStructureDiagram": "ForwardOnly" // ForwardOnly, BothDirections, No
  },
  "details": {
    "aggregation": "GroupByClass", // ByClass, GroupByClass, None
    "showClassGenericTypes": true,
    "showMethods": true,
    "showMethodParameterNames": true,
    "showMethodParameterTypes": true,
    "showMethodReturnType": true,
    "showPackageLevels": 2,
    "showDetailedClassStructure": true
  },
  "rootClass": "com.example.goniometer.HeadRotation",
  "extensionCallbackMethod": "" // qualified.class.name#methodName - signature: public static String method(String)
}
diagram meta data end '/

digraph g {
    rankdir="TB"
    splines=polyline
    
    'nodes 
    subgraph cluster_1322970774 { 
        label=BLE_Measurement
        labeljust=l
        fillcolor="#ececec"
        style=filled

        BaseActivity [
            label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
            <TR><TD ALIGN="LEFT" >(C)BaseActivity</TD></TR>
            <HR/>
            <TR><TD ALIGN="LEFT" >#   backButton: ImageButton [0..1]</TD></TR>
            <TR><TD ALIGN="LEFT" >#   bleManager: BLEManager [0..1]</TD></TR>
            <TR><TD ALIGN="LEFT" >#   bluetoothStatus: ImageView [0..1]</TD></TR>
            <HR/>
            <TR><TD ALIGN="LEFT" >+ onBackPressed()</TD></TR>
            <TR><TD ALIGN="LEFT" ># onCreate(savedInstanceState: Bundle)</TD></TR>
            <TR><TD ALIGN="LEFT" ># updateUI(isConnected: boolean)</TD></TR>
            </TABLE>>
            style=filled
            margin=0
            shape=plaintext
            fillcolor="#FFFFFF"
        ];

        BLEManager [
            label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
            <TR><TD ALIGN="LEFT" >(C)BLEManager</TD></TR>
            <HR/>
            <TR><TD ALIGN="LEFT" >-   bluetoothAdapter: BluetoothAdapter [0..1]</TD></TR>
            <TR><TD ALIGN="LEFT" >-   bluetoothGatt: BluetoothGatt [0..1]</TD></TR>
            <TR><TD ALIGN="LEFT" >-   characteristic: BluetoothGattCharacteristic [0..1]</TD></TR>
            <TR><TD ALIGN="LEFT" >-   connectionCallback: ConnectionCallback [0..1]</TD></TR>
            <TR><TD ALIGN="LEFT" >-   context: Context [0..1]</TD></TR>
            <TR><TD ALIGN="LEFT" >-   dataCallback: DataCallback [0..1]</TD></TR>
            <TR><TD ALIGN="LEFT" >-   gattCallback: BluetoothGattCallback [0..1]</TD></TR>
            <TR><TD ALIGN="LEFT" >-   isConnected: boolean [1]</TD></TR>
            <HR/>
            <TR><TD ALIGN="LEFT" >+ connectToDevice(deviceAddress: String)</TD></TR>
            <TR><TD ALIGN="LEFT" >+ disconnect()</TD></TR>
            <TR><TD ALIGN="LEFT" >+ sendDataToArduino(data: String)</TD></TR>
            </TABLE>>
            style=filled
            margin=0
            shape=plaintext
            fillcolor="#FFFFFF"
        ];

        AssessmentActivity [
            label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
            <TR><TD ALIGN="LEFT" >(C)AssessmentActivity</TD></TR>
            <HR/>
            <TR><TD ALIGN="LEFT" >#   LeftElbow: Button [0..1]</TD></TR>
            <TR><TD ALIGN="LEFT" >#   RightElbow: Button [0..1]</TD></TR>
            <TR><TD ALIGN="LEFT" >#   buttonHeadRotation: Button [0..1]</TD></TR>
            <TR><TD ALIGN="LEFT" >#   buttonLeftArmRotation: Button [0..1]</TD></TR>
            <TR><TD ALIGN="LEFT" >#   buttonLeftHipAbduction: Button [0..1]</TD></TR>
            <TR><TD ALIGN="LEFT" >#   buttonRightArmRotation: Button [0..1]</TD></TR>
            <TR><TD ALIGN="LEFT" >#   buttonRightHipAbduction: Button [0..1]</TD></TR>
            <TR><TD ALIGN="LEFT" >-   patientId: long [1]</TD></TR>
            <HR/>
            <TR><TD ALIGN="LEFT" >- goToHeadRotation()</TD></TR>
            <TR><TD ALIGN="LEFT" >- goToLeftElbow()</TD></TR>
            <TR><TD ALIGN="LEFT" >- goToLeftHipAbduction()</TD></TR>
            <TR><TD ALIGN="LEFT" >- goToLeftShoulderAbduction()</TD></TR>
            <TR><TD ALIGN="LEFT" >- goToRightElbow()</TD></TR>
            <TR><TD ALIGN="LEFT" >- goToRightHipAbduction()</TD></TR>
            <TR><TD ALIGN="LEFT" >- goToRightShoulderAbduction()</TD></TR>
            <TR><TD ALIGN="LEFT" ># onCreate(savedInstanceState: Bundle)</TD></TR>
            </TABLE>>
            style=filled
            margin=0
            shape=plaintext
            fillcolor="#FFFFFF"
        ];

        DataExtractionActivity [
            label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
            <TR><TD ALIGN="LEFT" >(C)DataExtractionActivity</TD></TR>
            <HR/>
            <TR><TD ALIGN="LEFT" >-   dbHelper: DatabaseHelper [0..1]</TD></TR>
            <TR><TD ALIGN="LEFT" >-   textViewCSVData: TextView [0..1]</TD></TR>
            <HR/>
            <TR><TD ALIGN="LEFT" >- createCSVFileUri(context: Context, fileName: String): Uri</TD></TR>
            <TR><TD ALIGN="LEFT" >- exportToCSV()</TD></TR>
            <TR><TD ALIGN="LEFT" ># onCreate(savedInstanceState: Bundle)</TD></TR>
            <TR><TD ALIGN="LEFT" >- showCSVPatients()</TD></TR>
            </TABLE>>
            style=filled
            margin=0
            shape=plaintext
            fillcolor="#FFFFFF"
        ];

        HeadRotation [
            label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
            <TR><TD ALIGN="LEFT" >(C)HeadRotation</TD></TR>
            <HR/>
            <TR><TD ALIGN="LEFT" >#   LeftM: TextView [0..1]</TD></TR>
            <TR><TD ALIGN="LEFT" >#   Livedata: TextView [0..1]</TD></TR>
            <TR><TD ALIGN="LEFT" >#   RightM: TextView [0..1]</TD></TR>
            <TR><TD ALIGN="LEFT" >#   SaveButton: Button [0..1]</TD></TR>
            <TR><TD ALIGN="LEFT" >#   StartButton: Button [0..1]</TD></TR>
            <TR><TD ALIGN="LEFT" >-   bleManager: BLEManager [0..1]</TD></TR>
            <TR><TD ALIGN="LEFT" >-   dbHelper: DatabaseHelper [0..1]</TD></TR>
            <TR><TD ALIGN="LEFT" >-   isMeasuring: boolean [1]</TD></TR>
            <TR><TD ALIGN="LEFT" >-   maxLeft: int [1]</TD></TR>
            <TR><TD ALIGN="LEFT" >-   maxRight: int [1]</TD></TR>
            <TR><TD ALIGN="LEFT" >-   patientId: long [1]</TD></TR>
            <HR/>
            <TR><TD ALIGN="LEFT" ># onCreate(savedInstanceState: Bundle)</TD></TR>
            </TABLE>>
            style=filled
            margin=0
            shape=plaintext
            fillcolor="#FFFFFF"
        ];

        LeftElbow [
            label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
            <TR><TD ALIGN="LEFT" >(C)LeftElbow</TD></TR>
            <HR/>
            <TR><TD ALIGN="LEFT" >#   LeftMax: TextView [0..1]</TD></TR>
            <TR><TD ALIGN="LEFT" >#   LiveDataElbow: TextView [0..1]</TD></TR>
            <TR><TD ALIGN="LEFT" >#   RightMax: TextView [0..1]</TD></TR>
            <TR><TD ALIGN="LEFT" >#   SaveButtonElbow: Button [0..1]</TD></TR>
            <TR><TD ALIGN="LEFT" >#   StartButtonElbow: Button [0..1]</TD></TR>
            <TR><TD ALIGN="LEFT" >-   bleManager: BLEManager [0..1]</TD></TR>
            <TR><TD ALIGN="LEFT" >-   dbHelper: DatabaseHelper [0..1]</TD></TR>
            <TR><TD ALIGN="LEFT" >-   isMeasuring: boolean [1]</TD></TR>
            <TR><TD ALIGN="LEFT" >-   maxLeftElbow: int [1]</TD></TR>
            <TR><TD ALIGN="LEFT" >-   maxRightElbow: int [1]</TD></TR>
            <TR><TD ALIGN="LEFT" >-   patientId: long [1]</TD></TR>
            <HR/>
            <TR><TD ALIGN="LEFT" ># onCreate(savedInstanceState: Bundle)</TD></TR>
            </TABLE>>
            style=filled
            margin=0
            shape=plaintext
            fillcolor="#FFFFFF"
        ];

        LeftHipAbduction [
            label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
            <TR><TD ALIGN="LEFT" >(C)LeftHipAbduction</TD></TR>
            <HR/>
            <TR><TD ALIGN="LEFT" >#   AbductionM: TextView [0..1]</TD></TR>
            <TR><TD ALIGN="LEFT" >-   AbductionMax: int [1]</TD></TR>
            <TR><TD ALIGN="LEFT" >#   LiveRoll: TextView [0..1]</TD></TR>
            <TR><TD ALIGN="LEFT" >#   SaveButton: Button [0..1]</TD></TR>
            <TR><TD ALIGN="LEFT" >#   StartButton: Button [0..1]</TD></TR>
            <TR><TD ALIGN="LEFT" >-   bleManager: BLEManager [0..1]</TD></TR>
            <TR><TD ALIGN="LEFT" >-   dbHelper: DatabaseHelper [0..1]</TD></TR>
            <TR><TD ALIGN="LEFT" >-   isMeasuring: boolean [1]</TD></TR>
            <TR><TD ALIGN="LEFT" >-   patientId: long [1]</TD></TR>
            <HR/>
            <TR><TD ALIGN="LEFT" ># onCreate(savedInstanceState: Bundle)</TD></TR>
            </TABLE>>
            style=filled
            margin=0
            shape=plaintext
            fillcolor="#FFFFFF"
        ];

        LeftShoulderAbduction [
            label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
            <TR><TD ALIGN="LEFT" >(C)LeftShoulderAbduction</TD></TR>
            <HR/>
            <TR><TD ALIGN="LEFT" >#   AbductionM: TextView [0..1]</TD></TR>
            <TR><TD ALIGN="LEFT" >-   AbductionMax: int [1]</TD></TR>
            <TR><TD ALIGN="LEFT" >#   LiveRoll: TextView [0..1]</TD></TR>
            <TR><TD ALIGN="LEFT" >#   SaveButton: Button [0..1]</TD></TR>
            <TR><TD ALIGN="LEFT" >#   StartButton: Button [0..1]</TD></TR>
            <TR><TD ALIGN="LEFT" >-   bleManager: BLEManager [0..1]</TD></TR>
            <TR><TD ALIGN="LEFT" >-   dbHelper: DatabaseHelper [0..1]</TD></TR>
            <TR><TD ALIGN="LEFT" >-   isMeasuring: boolean [1]</TD></TR>
            <TR><TD ALIGN="LEFT" >-   patientId: long [1]</TD></TR>
            <HR/>
            <TR><TD ALIGN="LEFT" ># onCreate(savedInstanceState: Bundle)</TD></TR>
            </TABLE>>
            style=filled
            margin=0
            shape=plaintext
            fillcolor="#FFFFFF"
        ];

        RightElbow [
            label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
            <TR><TD ALIGN="LEFT" >(C)RightElbow</TD></TR>
            <HR/>
            <TR><TD ALIGN="LEFT" >#   LeftMax: TextView [0..1]</TD></TR>
            <TR><TD ALIGN="LEFT" >#   LiveDataElbow: TextView [0..1]</TD></TR>
            <TR><TD ALIGN="LEFT" >#   RightMax: TextView [0..1]</TD></TR>
            <TR><TD ALIGN="LEFT" >#   SaveButtonElbow: Button [0..1]</TD></TR>
            <TR><TD ALIGN="LEFT" >#   StartButtonElbow: Button [0..1]</TD></TR>
            <TR><TD ALIGN="LEFT" >-   bleManager: BLEManager [0..1]</TD></TR>
            <TR><TD ALIGN="LEFT" >-   dbHelper: DatabaseHelper [0..1]</TD></TR>
            <TR><TD ALIGN="LEFT" >-   isMeasuring: boolean [1]</TD></TR>
            <TR><TD ALIGN="LEFT" >-   maxLeftElbow: int [1]</TD></TR>
            <TR><TD ALIGN="LEFT" >-   maxRightElbow: int [1]</TD></TR>
            <TR><TD ALIGN="LEFT" >-   patientId: long [1]</TD></TR>
            <HR/>
            <TR><TD ALIGN="LEFT" ># onCreate(savedInstanceState: Bundle)</TD></TR>
            </TABLE>>
            style=filled
            margin=0
            shape=plaintext
            fillcolor="#FFFFFF"
        ];

        RightHipAbduction [
            label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
            <TR><TD ALIGN="LEFT" >(C)RightHipAbduction</TD></TR>
            <HR/>
            <TR><TD ALIGN="LEFT" >-   AbductionMax: int [1]</TD></TR>
            <TR><TD ALIGN="LEFT" >#   LiveRoll: TextView [0..1]</TD></TR>
            <TR><TD ALIGN="LEFT" >#   SaveButton: Button [0..1]</TD></TR>
            <TR><TD ALIGN="LEFT" >#   StartButton: Button [0..1]</TD></TR>
            <TR><TD ALIGN="LEFT" >-   bleManager: BLEManager [0..1]</TD></TR>
            <TR><TD ALIGN="LEFT" >-   dbHelper: DatabaseHelper [0..1]</TD></TR>
            <TR><TD ALIGN="LEFT" >-   isMeasuring: boolean [1]</TD></TR>
            <TR><TD ALIGN="LEFT" >-   patientId: long [1]</TD></TR>
            <TR><TD ALIGN="LEFT" >#   rightAbductionM: TextView [0..1]</TD></TR>
            <HR/>
            <TR><TD ALIGN="LEFT" ># onCreate(savedInstanceState: Bundle)</TD></TR>
            </TABLE>>
            style=filled
            margin=0
            shape=plaintext
            fillcolor="#FFFFFF"
        ];

        RightShoulderAbduction [
            label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
            <TR><TD ALIGN="LEFT" >(C)RightShoulderAbduction</TD></TR>
            <HR/>
            <TR><TD ALIGN="LEFT" >-   AbductionMax: int [1]</TD></TR>
            <TR><TD ALIGN="LEFT" >#   LiveRoll: TextView [0..1]</TD></TR>
            <TR><TD ALIGN="LEFT" >#   RightAbductionM: TextView [0..1]</TD></TR>
            <TR><TD ALIGN="LEFT" >#   SaveButton: Button [0..1]</TD></TR>
            <TR><TD ALIGN="LEFT" >#   StartButton: Button [0..1]</TD></TR>
            <TR><TD ALIGN="LEFT" >-   bleManager: BLEManager [0..1]</TD></TR>
            <TR><TD ALIGN="LEFT" >-   dbHelper: DatabaseHelper [0..1]</TD></TR>
            <TR><TD ALIGN="LEFT" >-   isMeasuring: boolean [1]</TD></TR>
            <TR><TD ALIGN="LEFT" >-   patientId: long [1]</TD></TR>
            <HR/>
            <TR><TD ALIGN="LEFT" ># onCreate(savedInstanceState: Bundle)</TD></TR>
            </TABLE>>
            style=filled
            margin=0
            shape=plaintext
            fillcolor="#FFFFFF"
        ];

        DatabaseHelper [
            label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
            <TR><TD ALIGN="LEFT" >(C)DatabaseHelper</TD></TR>
            <HR/>
            <TR><TD ALIGN="LEFT" >+ addMeasurement(patientId: long, measurementType: String, leftAngle: int, rightAngle: int, timestamp: String): long</TD></TR>
            <TR><TD ALIGN="LEFT" >+ addPatient(firstName: String, lastName: String): long</TD></TR>
            <TR><TD ALIGN="LEFT" >+ deletePatient(patientId: long)</TD></TR>
            <TR><TD ALIGN="LEFT" >+ getInstance(context: Context): DatabaseHelper</TD></TR>
            <TR><TD ALIGN="LEFT" >+ getMeasurementsForPatient(patientId: long): List&lt;Measurement&gt;</TD></TR>
            <TR><TD ALIGN="LEFT" >+ getPatientNameById(patientId: long): String</TD></TR>
            <TR><TD ALIGN="LEFT" >+ onCreate(db: SQLiteDatabase)</TD></TR>
            <TR><TD ALIGN="LEFT" >+ onUpgrade(db: SQLiteDatabase, oldVersion: int, newVersion: int)</TD></TR>
            </TABLE>>
            style=filled
            margin=0
            shape=plaintext
            fillcolor="#FFFFFF"
        ];
    } 

    'edges    
    BaseActivity -> AssessmentActivity [arrowhead=none, arrowtail=empty, dir=both];
    BaseActivity -> BLEManager [label="bleManager [0..1]"];
    BaseActivity -> DataExtractionActivity [arrowhead=none, arrowtail=empty, dir=both];
    BaseActivity -> HeadRotation [arrowhead=none, arrowtail=empty, dir=both];
    BaseActivity -> LeftElbow [arrowhead=none, arrowtail=empty, dir=both];
    BaseActivity -> LeftHipAbduction [arrowhead=none, arrowtail=empty, dir=both];
    BaseActivity -> LeftShoulderAbduction [arrowhead=none, arrowtail=empty, dir=both];
    BaseActivity -> RightElbow [arrowhead=none, arrowtail=empty, dir=both];
    BaseActivity -> RightHipAbduction [arrowhead=none, arrowtail=empty, dir=both];
    BaseActivity -> RightShoulderAbduction [arrowhead=none, arrowtail=empty, dir=both];
    BaseActivity -> DatabaseHelper [label="dbHelper [0..1]"];

    DataExtractionActivity -> DatabaseHelper [label="dbHelper [0..1]"];
    HeadRotation -> BLEManager [label="bleManager [0..1]"];
    HeadRotation -> DatabaseHelper [label="dbHelper [0..1]"];
    LeftElbow -> BLEManager [label="bleManager [0..1]"];
    LeftElbow -> DatabaseHelper [label="dbHelper [0..1]"];
    LeftHipAbduction -> BLEManager [label="bleManager [0..1]"];
    LeftHipAbduction -> DatabaseHelper [label="dbHelper [0..1]"];
    LeftShoulderAbduction -> BLEManager [label="bleManager [0..1]"];
    LeftShoulderAbduction -> DatabaseHelper [label="dbHelper [0..1]"];
    RightElbow -> BLEManager [label="bleManager [0..1]"];
    RightElbow -> DatabaseHelper [label="dbHelper [0..1]"];
    RightHipAbduction -> BLEManager [label="bleManager [0..1]"];
    RightHipAbduction -> DatabaseHelper [label="dbHelper [0..1]"];
    RightShoulderAbduction -> BLEManager [label="bleManager [0..1]"];
    RightShoulderAbduction -> DatabaseHelper [label="dbHelper [0..1]"];
}
@enduml
